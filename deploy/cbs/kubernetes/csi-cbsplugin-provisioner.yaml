---
kind: Deployment
apiVersion: apps/v1
metadata:
  name: csi-cbsplugin-provisioner
  namespace: kube-system
spec:
  replicas: 1
  selector:
    matchLabels:
      app: csi-cbsplugin-provisioner
  template:
    metadata:
      labels:
        app: csi-cbsplugin-provisioner
    spec:
      hostNetwork: true
      serviceAccountName: tencentcloud-csi-provisioner
      nodeSelector:
        kubernetes.io/os: linux
      # priorityClassName: system-cluster-critical
      # tolerations:
      #   - key: "node-role.kubernetes.io/master"
      #     operator: "Equal"
      #     value: "true"
      #     effect: "NoSchedule"
      containers:
        - name: csi-provisioner
          image: quay.io/k8scsi/csi-provisioner:v1.5.0
          args:
            - "--provisioner=com.tencent.cloud.csi.cbs"
            - "--feature-gates=Topology=True"
            - "--csi-address=$(ADDRESS)"
            - "--v=5"
            # - "--connection-timeout=15s"
            # - "--timeout=120s"
            # - "--enable-leader-election"
            # - "--leader-election-type=leases"
          env:
            - name: ADDRESS
              value: unix:///csi/csi.sock
          imagePullPolicy: "IfNotPresent"
          volumeMounts:
            - name: socket-dir
              mountPath: /csi
        - name: csi-snapshotter
          image: quay.io/k8scsi/csi-snapshotter:v2.0.1
          args:
            - "--csi-address=$(ADDRESS)"
            - "--v=5"
            # - "--leader-election"
          env:
            - name: ADDRESS
              value: unix:///csi/csi.sock
          imagePullPolicy: Always
          securityContext:
            privileged: true
          volumeMounts:
            - name: socket-dir
              mountPath: /csi
      volumes:
        - name: socket-dir
          hostPath:
            path: /var/lib/kubelet/plugins/com.tencent.cloud.csi.cbs
            type: DirectoryOrCreate
